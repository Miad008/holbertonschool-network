#!/usr/bin/env bash
# Display listening ports with PID/Program name

OS_NAME=$(uname -s)

case "$OS_NAME" in
  Linux)
    if command -v netstat >/dev/null 2>&1; then
      # Listening sockets (TCP/UDP/UNIX) with PID/Program name; no -n to show service names like example
      netstat -lptux 2>/dev/null
    elif command -v ss >/dev/null 2>&1; then
      # Fallback: show TCP/UDP/UNIX listening with processes
      ss -lptu
      echo
      ss -lxp
    else
      echo "Error: Neither netstat nor ss is available on this system." >&2
      exit 1
    fi
    ;;
  Darwin)
    # macOS: format differs; use lsof as an approximation
    echo "TCP (LISTEN):"
    lsof -nP -iTCP -sTCP:LISTEN 2>/dev/null || true
    echo
    echo "UDP (open sockets):"
    lsof -nP -iUDP 2>/dev/null || true
    ;;
  *)
    if command -v netstat >/dev/null 2>&1; then
      netstat -lptux 2>/dev/null
    elif command -v ss >/dev/null 2>&1; then
      ss -lptu
      echo
      ss -lxp
    elif command -v lsof >/dev/null 2>&1; then
      echo "TCP (LISTEN):"
      lsof -nP -iTCP -sTCP:LISTEN 2>/dev/null || true
      echo
      echo "UDP (open sockets):"
      lsof -nP -iUDP 2>/dev/null || true
    else
      echo "Error: No suitable tool found (netstat/ss/lsof)." >&2
      exit 1
    fi
    ;;
esac
